import{_ as a,c as s,o as t,al as i}from"./chunks/framework.B3j7FRen.js";const u=JSON.parse('{"title":"Save input format","description":"","frontmatter":{},"headers":[],"relativePath":"server/rest-api/input-formats/save-format.md","filePath":"server/030_rest-api/040_input-formats/020_save-format.md","lastUpdated":1752044654000}'),o={name:"server/rest-api/input-formats/save-format.md"};function n(r,e,l,h,d,p){return t(),s("div",null,e[0]||(e[0]=[i(`<h1 id="save-input-format" tabindex="-1">Save input format <a class="header-anchor" href="#save-input-format" aria-label="Permalink to &quot;Save input format&quot;">​</a></h1> <p>Add a user input format, or update an existing one.</p> <p><strong>URL</strong> : <code>/blacklab-server/input-formats</code></p> <p><strong>Method</strong> : <code>POST</code></p> <p><em>(will fail if you are not logged in or not authorized)</em></p> <h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4> <table tabindex="0"><thead><tr><th>Parameter</th> <th>Description</th></tr></thead> <tbody><tr><td><code>data</code></td> <td>a file upload of the configuration file.</td></tr></tbody></table> <h2 id="success-response" tabindex="-1">Success Response <a class="header-anchor" href="#success-response" aria-label="Permalink to &quot;Success Response&quot;">​</a></h2> <p><strong>HTTP response code</strong>: <code>200 OK</code></p> <h3 id="content-example" tabindex="-1">Content example <a class="header-anchor" href="#content-example" aria-label="Permalink to &quot;Content example&quot;">​</a></h3> <div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SUCCESS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Format added.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="error-response" tabindex="-1">Error Response <a class="header-anchor" href="#error-response" aria-label="Permalink to &quot;Error Response&quot;">​</a></h2> <p><strong>HTTP response code</strong>: <code>400 Bad Request</code></p> <h3 id="content-example-1" tabindex="-1">Content example <a class="header-anchor" href="#content-example-1" aria-label="Permalink to &quot;Content example&quot;">​</a></h3> <div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CANNOT_CREATE_INDEX&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Could not create/overwrite format. The server is not configured with support for user content.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2> <p>This creates/updates a user input format. Use input format names start with the userid, so if your input format is named <code>my-format</code> and your userid is <code>me@example.com</code>, the input format will be named <code>me@examples.com:my-format</code>.</p> <h2 id="todo" tabindex="-1">TODO <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;TODO&quot;">​</a></h2> <ul><li>Succes should probably return <code>201 Created</code></li> <li>The success message should indicate whether the format was created or added.</li> <li><code>CANNOT_CREATE_INDEX</code> is a misnomer and should probably be changed to a more generic CANNOT_CREATE.</li> <li>Maybe there should be an <code>overwrite</code> parameter that indicates whether or not it is your intention to overwrite an existing format.</li></ul>`,35)]))}const k=a(o,[["render",n]]);export{u as __pageData,k as default};
