import{_ as i,c as s,o as t,al as e}from"./chunks/framework.B3j7FRen.js";const c=JSON.parse('{"title":"Development resources","description":"","frontmatter":{"order":-1},"headers":[],"relativePath":"development/index.md","filePath":"development/index.md","lastUpdated":1749642459000}'),n={name:"development/index.md"};function l(h,a,r,p,o,k){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="development-resources" tabindex="-1">Development resources <a class="header-anchor" href="#development-resources" aria-label="Permalink to &quot;Development resources&quot;">​</a></h1> <h2 id="blacklab-core" tabindex="-1">BlackLab Core <a class="header-anchor" href="#blacklab-core" aria-label="Permalink to &quot;BlackLab Core&quot;">​</a></h2> <p>The Java library</p> <p>First you need to get the BlackLab library. The simplest way is to let Maven download it automatically from the Central Repository, but you can also download a prebuilt binary, and it&#39;s trivial to build it yourself.</p> <blockquote><b>Note to MacOS users</b>: Dirk Roorda at DANS wrote a detailed guide for installing and indexing data on MacOS. It&#39;s available <a href="https://github.com/Dans-labs/clariah-gm/blob/master/blacklab/install.md">here</a>. It&#39;s also archived <a href="../server/install-macos.html">here</a>.
</blockquote> <h2 id="getting-blacklab" tabindex="-1">Getting BlackLab <a class="header-anchor" href="#getting-blacklab" aria-label="Permalink to &quot;Getting BlackLab&quot;">​</a></h2> <h3 id="getting-blacklab-from-maven-central" tabindex="-1">Getting BlackLab from Maven Central <a class="header-anchor" href="#getting-blacklab-from-maven-central" aria-label="Permalink to &quot;Getting BlackLab from Maven Central&quot;">​</a></h3> <p>BlackLab is in the Maven Central Repository, so you should be able to simply add it to your build tool, e.g.:</p> <div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;nl.inl.blacklab&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;blacklab&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;3.0.1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>If you&#39;re not sure what version to use, see the <a href="./downloads.html">downloads</a> or <a href="./changelog.html">changelog</a> pages.</p> <h3 id="downloading-a-prebuilt-binary" tabindex="-1">Downloading a prebuilt binary <a class="header-anchor" href="#downloading-a-prebuilt-binary" aria-label="Permalink to &quot;Downloading a prebuilt binary&quot;">​</a></h3> <p>BlackLab Core consists of a JAR and a set of required libraries. See the <a href="https://github.com/instituutnederlandsetaal/BlackLab/releases/" target="_blank" rel="noreferrer">GitHub releases page</a> and choose a jar-with-libs download. The latter one may also contain development versions you can try out.</p> <p>BlackLab Server only consists of a WAR file that includes everything. You could even unzip this WAR file to obtain the included BlackLab JAR and zip files if you needed to for some reason.</p> <h3 id="building-from-source" tabindex="-1">Building from source <a class="header-anchor" href="#building-from-source" aria-label="Permalink to &quot;Building from source&quot;">​</a></h3> <p>If you want the very latest version (the &quot;dev&quot; branch) of BlackLab, you can easily build it from source code.</p> <p>First, you need to download the source code from GitHub. You can download it from there in a .zip file (be sure to select the dev branch before doing so), but a better way to get it is by cloning it using Git. <a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" target="_blank" rel="noreferrer">Install a Git client</a> (we&#39;ll give command line examples here, but it should translate easily to GUI clients like TortoiseGit), change to a directory where you keep your projects, and clone BlackLab:</p> <pre><code>git clone git://github.com/instituutnederlandsetaal/BlackLab.git
</code></pre> <p>Git will download the project and place it in a subdirectory &quot;BlackLab&quot;. Now switch to the dev branch:</p> <pre><code>git checkout dev
</code></pre> <p>Install a recent JDK (Java Development Kit). If you&#39;re on Linux, you can use your package manager to do this (OpenJDK is fine too). Note that you will need at least JDK version 8 (i.e. openjdk-1.8.0) to use the latest BlackLab versions.</p> <p>BlackLab is built using <a href="http://maven.apache.org/" target="_blank" rel="noreferrer">Maven</a>, a popular Java build tool. <a href="https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html" target="_blank" rel="noreferrer">Install Maven</a> (use your package manager if on Linux), change into the BlackLab directory, and build the library:</p> <pre><code>mvn install
</code></pre> <p>(&quot;install&quot; refers to the fact that the library is &quot;installed&quot; to your private Maven repository after it is built)</p> <p>After a lot of text output, it should say &quot;BUILD SUCCESS&quot; and the BlackLab JAR library should be under core/target/blacklab-VERSION.jar (where VERSION is the current BlackLab version, i.e. &quot;1.7-SNAPSHOT&quot;; SNAPSHOT means it&#39;s not an official release, by the way). The BlackLab Server WAR will be in server/target/blacklab-server-VERSION.war.</p> <div class="tip custom-block"><p class="custom-block-title">NOTE</p> <p>If you want to use BlackLab Server and <a href="https://blacklab-frontend.ivdnt.org/" target="_blank" rel="noreferrer">BlackLab Frontend</a> (our search application), you&#39;ll need an application server like Apache Tomcat too. Also available via package manager in Linux. After installation, find the <code>webapps</code> directory (e.g. <code>/var/lib/tomcat/webapps/</code>, but may depend on distribution) and copy the WAR file to it. It should be extracted by Tomcat automatically. For full installation and configuration instructions, see <a href="/server/overview.html">BlackLab Server overview</a>.</p></div> <h2 id="a-simple-blacklab-application" tabindex="-1">A simple BlackLab application <a class="header-anchor" href="#a-simple-blacklab-application" aria-label="Permalink to &quot;A simple BlackLab application&quot;">​</a></h2> <p>Finally, let&#39;s look at an example Java application.</p> <p>Here’s the basic structure of a BlackLab search application, to give you an idea of where to look in the source code and documentation (note that we leave nl.inl.blacklab out of the package names for brevity):</p> <ol><li>Call BlackLab.open() to instantiate a BlackLabIndex object. This provides the main BlackLab API.</li> <li>Construct a TextPattern structure that represents your query. You may want to do this from a query parser, or use one of the query parsers supplied with BlackLab (CorpusQueryLanguageParser, …).</li> <li>Call the BlackLabIndex.find() method to execute the TextPattern and return a Hits object. (Internally, this translates the TextPattern into a Lucene SpanQuery, executes it, and collects the hits. Each of these steps may also be done manually if you wish to have more control over the process)</li> <li>Sort or group the results, using Hits.sort() or Hits.group() and a HitProperty object to indicate the sorting/grouping criteria.</li> <li>Select a few of your Hits to display by calling Hits.window().</li> <li>Loop over the HitsWindow and display each hit.</li> <li>Close the BlackLabIndex object.</li></ol> <p>The above in code:</p> <div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// Open your corpus</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (BlackLabIndex index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BlackLab.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/zwets/testindex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	    String corpusQlQuery </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">the</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> [pos=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">adj.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">brown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">fox</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    // Parse your query to get a TextPattern</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	    TextPattern pattern </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CorpusQueryLanguageParser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(corpusQlQuery);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    // Execute the TextPattern</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	    Hits hits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pattern);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    // Sort the hits by the words to the left of the matched text</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	    HitProperty sortProperty </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HitPropertyBeforeHit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index, index.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">annotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;word&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	    hits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hits.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sortProperty);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    // Limit the results to the ones we want to show now (i.e. the first page)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	    Hits window </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hits.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">window</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    // Iterate over window and display the hits</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	    Concordances concs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hits.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">concordances</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContextSize.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Hit hit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	        Concordance conc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> concs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hit);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	        // Strip out XML tags for display.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	        String left </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XmlUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xmlToPlainText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conc.left);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	        String hitText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XmlUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xmlToPlainText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conc.hit);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	        String right </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XmlUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xmlToPlainText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conc.right);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%45s[%s]%s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, left, hitText, right);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span></code></pre></div><p>See also:</p> <ul><li><a href="/guide/example-application.html">The included example application</a></li></ul> <h2 id="tutorials-howtos" tabindex="-1">Tutorials / howtos <a class="header-anchor" href="#tutorials-howtos" aria-label="Permalink to &quot;Tutorials / howtos&quot;">​</a></h2> <h3 id="a-custom-analysis-script" tabindex="-1">A custom analysis script <a class="header-anchor" href="#a-custom-analysis-script" aria-label="Permalink to &quot;A custom analysis script&quot;">​</a></h3> <h3 id="using-the-forward-index" tabindex="-1">Using the forward index <a class="header-anchor" href="#using-the-forward-index" aria-label="Permalink to &quot;Using the forward index&quot;">​</a></h3> <h3 id="using-capture-groups" tabindex="-1">Using capture groups <a class="header-anchor" href="#using-capture-groups" aria-label="Permalink to &quot;Using capture groups&quot;">​</a></h3> <h3 id="indexing-a-different-input-format" tabindex="-1">Indexing a different input format <a class="header-anchor" href="#indexing-a-different-input-format" aria-label="Permalink to &quot;Indexing a different input format&quot;">​</a></h3> <h2 id="internals" tabindex="-1">Internals <a class="header-anchor" href="#internals" aria-label="Permalink to &quot;Internals&quot;">​</a></h2> <p>The more in-depth information about BlackLab&#39;s internals, such as the structure of the code, and details about file formats, is available in <a href="https://github.com/instituutnederlandsetaal/BlackLab/tree/dev/doc/#readme" target="_blank" rel="noreferrer">the GitHub repository</a>, along with other documentation related to development.</p>`,77)]))}const E=i(n,[["render",l]]);export{c as __pageData,E as default};
