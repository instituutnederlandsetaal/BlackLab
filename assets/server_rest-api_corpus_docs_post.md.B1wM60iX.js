import{_ as t,c as a,o as s,al as d}from"./chunks/framework.B3j7FRen.js";const u=JSON.parse('{"title":"Add documents to user corpus","description":"","frontmatter":{},"headers":[],"relativePath":"server/rest-api/corpus/docs/post.md","filePath":"server/030_rest-api/_corpus/docs/post.md","lastUpdated":1749114403000}'),o={name:"server/rest-api/corpus/docs/post.md"};function i(r,e,n,l,c,p){return s(),a("div",null,e[0]||(e[0]=[d(`<h1 id="add-documents-to-user-corpus" tabindex="-1">Add documents to user corpus <a class="header-anchor" href="#add-documents-to-user-corpus" aria-label="Permalink to &quot;Add documents to user corpus&quot;">​</a></h1> <p><strong>URL</strong> : <code>/blacklab-server/&lt;corpus-name&gt;/docs</code></p> <p><strong>Method</strong> : <code>POST</code></p> <p><strong>Auth required</strong>: YES</p> <h4 id="basic-parameters" tabindex="-1">Basic parameters <a class="header-anchor" href="#basic-parameters" aria-label="Permalink to &quot;Basic parameters&quot;">​</a></h4> <p>Files uploaded may be regular files or <code>.zip</code> or <code>.tar.gz</code> archives.</p> <p>The document format is always the index&#39; default format set during creation.</p> <table tabindex="0"><thead><tr><th>Parameter</th> <th style="text-align:left;"></th> <th>Description</th></tr></thead> <tbody><tr><td><code>data</code></td> <td style="text-align:left;"></td> <td>File to index. Single file upload.</td></tr> <tr><td><code>data[]</code></td> <td style="text-align:left;"></td> <td>Files to index. Multiple file uploads can be handled with this.</td></tr> <tr><td><code>linkeddata</code></td> <td style="text-align:left;"></td> <td>Linked data file. Single file upload. Only relevant if your input format uses linked documents (e.g. a document containing the metadata)</td></tr> <tr><td><code>linkeddata</code></td> <td style="text-align:left;"></td> <td>Linked data files. Multiple file uploads can be handled with this.</td></tr></tbody></table> <h2 id="success-response" tabindex="-1">Success Response <a class="header-anchor" href="#success-response" aria-label="Permalink to &quot;Success Response&quot;">​</a></h2> <p><strong>Code</strong> : <code>200 OK</code></p> <h3 id="content-examples" tabindex="-1">Content examples <a class="header-anchor" href="#content-examples" aria-label="Permalink to &quot;Content examples&quot;">​</a></h3> <div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SUCCESS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Data added succesfully.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="todo" tabindex="-1">TODO <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;TODO&quot;">​</a></h2> <ul><li>add <code>format</code> parameter to make it possible to override the default document format, so you can add documents of several formats to one index</li> <li>should probably return <code>201 Created</code></li> <li>should this automatically update existing documents based on <code>pidField</code>? Or at least as an option, e.g. <code>overwrite=true</code>?</li></ul>`,26)]))}const m=t(o,[["render",i]]);export{u as __pageData,m as default};
