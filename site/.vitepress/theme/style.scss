/**
 * Customize default theme styling by overriding CSS variables:
 * https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
 */

/**
 * Colors
 *
 * Each colors have exact same color scale system with 3 levels of solid
 * colors with different brightness, and 1 soft color.
 *
 * - `XXX-1`: The most solid color used mainly for colored text. It must
 *   satisfy the contrast ratio against when used on top of `XXX-soft`.
 *
 * - `XXX-2`: The color used mainly for hover state of the button.
 *
 * - `XXX-3`: The color for solid background, such as bg color of the button.
 *   It must satisfy the contrast ratio with pure white (#ffffff) text on
 *   top of it.
 *
 * - `XXX-soft`: The color used for subtle background such as custom container
 *   or badges. It must satisfy the contrast ratio when putting `XXX-1` colors
 *   on top of it.
 *
 *   The soft color must be semi transparent alpha channel. This is crucial
 *   because it allows adding multiple "soft" colors on top of each other
 *   to create a accent, such as when having inline code block inside
 *   custom containers.
 *
 * - `default`: The color used purely for subtle indication without any
 *   special meanings attached to it such as bg color for menu hover state.
 *
 * - `brand`: Used for primary brand colors, such as link text, button with
 *   brand theme, etc.
 *
 * - `tip`: Used to indicate useful information. The default theme uses the
 *   brand color for this by default.
 *
 * - `warning`: Used to indicate warning to the users. Used in custom
 *   container, badges, etc.
 *
 * - `danger`: Used to show error, or dangerous message to the users. Used
 *   in custom container, badges, etc.
 * -------------------------------------------------------------------------- */

:root {
  --vp-c-default-1: var(--vp-c-gray-1);
  --vp-c-default-2: var(--vp-c-gray-2);
  --vp-c-default-3: var(--vp-c-gray-3);
  --vp-c-default-soft: var(--vp-c-gray-soft);

  --vp-c-brand-1: var(--vp-c-indigo-1);
  --vp-c-brand-2: var(--vp-c-indigo-2);
  --vp-c-brand-3: var(--vp-c-indigo-3);
  --vp-c-brand-soft: var(--vp-c-indigo-soft);

  --vp-c-tip-1: var(--vp-c-brand-1);
  --vp-c-tip-2: var(--vp-c-brand-2);
  --vp-c-tip-3: var(--vp-c-brand-3);
  --vp-c-tip-soft: var(--vp-c-brand-soft);

  --vp-c-warning-1: var(--vp-c-yellow-1);
  --vp-c-warning-2: var(--vp-c-yellow-2);
  --vp-c-warning-3: var(--vp-c-yellow-3);
  --vp-c-warning-soft: var(--vp-c-yellow-soft);

  --vp-c-danger-1: var(--vp-c-red-1);
  --vp-c-danger-2: var(--vp-c-red-2);
  --vp-c-danger-3: var(--vp-c-red-3);
  --vp-c-danger-soft: var(--vp-c-red-soft);
}

/**
 * Component: Button
 * -------------------------------------------------------------------------- */

:root {
  --vp-button-brand-border: transparent;
  --vp-button-brand-text: var(--vp-c-white);
  --vp-button-brand-bg: var(--vp-c-brand-3);
  --vp-button-brand-hover-border: transparent;
  --vp-button-brand-hover-text: var(--vp-c-white);
  --vp-button-brand-hover-bg: var(--vp-c-brand-2);
  --vp-button-brand-active-border: transparent;
  --vp-button-brand-active-text: var(--vp-c-white);
  --vp-button-brand-active-bg: var(--vp-c-brand-1);
}

/**
 * Component: Home
 * -------------------------------------------------------------------------- */

:root {
  --vp-home-hero-name-color: transparent;
  --vp-home-hero-name-background: var(--vp-c-brand-3);
  --vp-home-hero-image-background-image: transparent;
  --vp-home-hero-image-filter: blur(44px);
}

@media (min-width: 640px) {
  :root {
    --vp-home-hero-image-filter: blur(56px);
  }
}

@media (min-width: 960px) {
  :root {
    --vp-home-hero-image-filter: blur(68px);
  }
}

/**
 * Component: Custom Block
 * -------------------------------------------------------------------------- */

:root {
  --vp-custom-block-tip-border: transparent;
  --vp-custom-block-tip-text: var(--vp-c-text-1);
  --vp-custom-block-tip-bg: var(--vp-c-brand-soft);
  --vp-custom-block-tip-code-bg: var(--vp-c-brand-soft);
}

/**
 * Component: Algolia
 * -------------------------------------------------------------------------- */

.DocSearch {
  --docsearch-primary-color: var(--vp-c-brand-1) !important;
}


/* Custom styles */

img {
	box-shadow: 0 0 3px 2px rgba(0, 0, 0, 0.1);
	border-radius: 6px;
}

img+img {
	margin-top: 1em;
}

/* Remove all padding from tabs that only contain a single code block */
.plugin-tabs--content [class*="language-"] {
	padding: 0 !important;
	margin: 0 !important;
}

/* For tabs with multiple children, make code blocks full width */
.plugin-tabs--content [class*="language-"] {
	margin-left: -15px !important;
	margin-right: -15px !important;
	border-radius: 0;
}

/* Remove top padding from first code block in tab */
.plugin-tabs--content [class*="language-"]:first-child {
	margin-top: -16px !important;
	border-radius: 0!important;
}

/* Remove bottom padding from last code block in tab */
.plugin-tabs--content [class*="language-"]:last-child {
	margin-bottom: -15px !important;
}

/*****************************************************/
/* Layout adjustments for larger and smaller screens */
/*****************************************************/

:root {
	--vp-layout-max-width: 1920px;
}

.Layout {
	.VPNavBar {
		box-shadow:0 2px 8px rgba(0,0,0,.2);
		border-bottom: 5px solid var(--vp-c-brand-3)!important;
		height: calc(var(--vp-nav-height) + 5px);

		&:not(.home) {
			background-color: var(--vp-nav-bg-color)!important;
			// border-bottom: 1px solid var(--vp-c-gutter)!important;
		}
		
		> .wrapper {
			padding: 0!important;
			
			box-sizing: border-box;
			> .container {
				max-width: var(--vp-layout-max-width);
				display: flex;
				justify-content: space-between;
				gap: 24px;
				padding: 0 24px;
				flex-wrap: nowrap;
				.title {
					padding: 0!important;
					background-color: transparent;
					width: auto!important;
					flex: 0; // 0 1 auto;
					flex-basis: auto;
					// min-width: 0px!important;
					
					.title span { overflow: hidden; text-overflow: ellipsis; }
					
					position: static!important;
					font-size: 125%;
				}
				.content {
					flex-grow: 0;
					background: transparent!important;
					padding: 0!important;
					flex-shrink: 1;
					min-width: 0;
					.content-body {
						background: transparent!important;
						flex-shrink: 1;
						min-width: 0;
						.VPNavBarMenu {
							flex-shrink: 1;
							overflow: overlay;
							// Scrollable, but invisible bar
							// Scroll using shift + wheel or drag on mobile
							scrollbar-width: none;
							min-width: 0;
						}
					}
				}
			}
		}

		.divider { display: none; } // strange bottom border - we moved it to the navbar container itself.

		.VPNavBar.has-sidebar .content {
			padding-left: 0!important;
			padding-right: 0!important;
		}
	
		// Reorder navbar items 
		/* nav items */
		.VPNavBarMenu {
			order: 1;
			overflow: auto;
		}
		.VPNavBarSearch {
			flex-grow: 0!important;
			order: 2;
			padding-left: 0!important;
		}
		/* github link */
		.VPSocialLinks {
			order: 3;
		}
		/* dark mode switch */
		.VPNavBarAppearance {
			order: 4;
		}
		/* collapsed state of dark mode and social links */
		.VPFlyout {
			order: 3;
		}
		.VPNavBarHamburger {
			order: 10;
			// justify-content: end;
			margin-right: -16px; // align with the right edge of the navbar
		}
	}
	.VPSidebar { // left side sidebar
		
	}
	> .VPContent {
		 > .VPDoc {
			> .container { // content without left sidebar
				display: flex;
				
				> .aside { flex-grow: 0; } // right-side sidebar
				> .content { // main document
					padding: 0;
					flex-grow: 1; 
					max-width: unset; 
					.content-container {
						max-width: unset;
					}
				}
			 }
		 }
		 
	}

	// Normally footer is hidden when sidebar is visible
	// We want to show it anyway, so override the default behavior
	// The footer is actually below the sidebar and content, 
	// but we we want to style it as if it is below the content
	// So add compensation padding equal to the sidebar and aside width

	> .VPFooter {
		--vp-aside-width: 256px;
		
		border: none;
		display: block!important;
		width: 100%;
		max-width: var(--vp-layout-max-width);
		margin: auto;
		
		// Compensate for 
		padding: 0px;
		padding-top: 24px;
		// Sidebar (left): Visible above 960px, and only present when we have a .has-sidebar class
		@media (min-width: 960px) {
			&.has-sidebar { padding-left: var(--vp-sidebar-width); } 
		}
		// Aside (right): Visible above 1280px, and check for existence through the :has() pseudo-class
		@media (min-width: 1280px) { 
			@at-root .VPContent:has(.aside) + .VPFooter {
				padding-right: var(--vp-aside-width);
			}
		}
		
		// Add some padding and margin here to mirror the document container
		.container {
			margin: 0 32px;
			padding: 16px 24px;
			border-top: 1px solid var(--vp-c-divider);
		}
	}

	// Overrides for the sidebar padding, this otherwise breaks above the default max page width of 1440px
	@media (max-width: 1919px) and (min-width: 960px) {
		.VPSidebar {
			width: var(--vp-sidebar-width);
		}
		.VPContent.has-sidebar {
			padding-left: var(--vp-sidebar-width)!important;
		}
	}

	@media (max-width: 1279px) {
		// Hide logo
		.VPNavBar .title img {
			display: none;
		}
	}
}

/*******************************/
/* Style, as opposed to layout */
/*******************************/

.logo {
	box-shadow: none !important;
	border-radius: 0px;
	margin-right:20px !important;
	min-height:40px;
}

// When no image, center the hero section
.VPHero:not(:has(img)) > .container > .main {
	display: flex;
	flex-direction: column;
	align-items: center;
	text-align: center;
	max-width: max(75%, 576px);
	margin: auto;

	* {
		text-align: center;
		max-width: 100%;
	}
	.heading {
		align-items: center;
	}
	
}
.VPHero img {
	box-shadow: none!important;
}
:root.dark .logo {
	filter: invert(1);
}

/* border pixel fix */
.VPNavBar .title {
	border-bottom: none!important; 
	height: var(--vp-nav-height)!important;
	font-family: 'schoolboek', sans-serif !important;
}


/* alles hoekig -> INT be square :P */
*:not(.VPSwitch):not(.icon):not(.check){
	border-radius: 0px !important;
}

/* INT font */
@font-face {
	font-family: "schoolboek";
	src: url("/font/Schoolboek-Regular.eot");
	src: url("/font/Schoolboek-Regular.eot?#iefix") format("embedded-opentype"),
	url("/font/Schoolboek-Regular.woff") format("woff"),
	url("/font/Schoolboek-Regular.ttf") format("truetype");
	font-weight: normal;
	font-style: normal;
	font-stretch: normal;
}

