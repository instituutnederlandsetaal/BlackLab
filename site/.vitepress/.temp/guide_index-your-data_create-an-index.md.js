import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Create an index","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index-your-data/create-an-index.md","filePath":"guide/030_index-your-data/005_create-an-index.md","lastUpdated":1749639304000}');
const _sfc_main = { name: "guide/index-your-data/create-an-index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="create-an-index" tabindex="-1">Create an index <a class="header-anchor" href="#create-an-index" aria-label="Permalink to &quot;Create an index&quot;">​</a></h1> <h2 id="indextool" tabindex="-1">IndexTool <a class="header-anchor" href="#indextool" aria-label="Permalink to &quot;IndexTool&quot;">​</a></h2> <p>IndexTool is a simple commandline application to create a corpus and add documents to it.</p> <p>Get the blacklab JAR and the required libraries (see <a href="/guide/getting-started.html#getting-blacklab">Getting started</a>). The libraries should be in a directory called <code>lib</code> that&#39;s in the same directory as the BlackLab JAR (or elsewhere on the classpath).</p> <p>Start the <code>IndexTool</code> without parameters for help information:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">java</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -cp</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;blacklab.jar:lib&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> nl.inl.blacklab.tools.IndexTool</span></span></code></pre></div><p>(this assumes <code>blacklab.jar</code> and the <code>lib</code> subdirectory containing required libraries are located in the current directory)</p> <p>(if you&#39;re on Windows, replace the classpath separator colon <code>:</code> with a semicolon <code>;</code>)</p> <p>To create a new index:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">java</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -cp</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;blacklab.jar:lib&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> nl.inl.blacklab.tools.IndexTool</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> create</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> INDEX_DIR</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> INPUT_FILES</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> FORMAT</span></span></code></pre></div><p>To add documents to an existing index:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">java</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -cp</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;blacklab.jar:lib&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> nl.inl.blacklab.tools.IndexTool</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> add</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> INDEX_DIR</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> INPUT_FILES</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> FORMAT</span></span></code></pre></div><p>If you specify a directory as the <code>INPUT_FILES</code>, it will be scanned recursively. You can also specify a file glob (such as <code>*.xml</code>; single-quote it if you&#39;re on Linux so it doesn&#39;t get expanded by the shell) or a single file. If you specify a <code>.zip</code> or <code>.tar.gz</code> file, BlackLab will automatically index the contents.</p> <p>For example, if you have TEI data in <code>/data/input/my-tei-files</code> and want to index your corpus to <code>/data/blacklab-corpora/my-corpus</code>, run the following command:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">java</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -cp</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;blacklab.jar:lib&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> nl.inl.blacklab.tools.IndexTool</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> create</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /data/blacklab-corpora/my-corpus</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /data/input/my-tei-files</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> tei</span></span></code></pre></div><p>Your data is indexed and placed in a new BlackLab index in the <code>/data/blacklab-corpora/my-corpus</code> directory.</p> <p>If you don&#39;t specify a glob, IndexTool will index <code>*.xml</code> by default. You can specify a glob (like <code>*.txt</code> or <code>*</code> for all files) to change this.</p> <details class="details custom-block"><summary><b>TIP:</b> Give Java enough memory</summary> <p>Please note that if you&#39;re indexing very large files, you should give <code>java</code> more than the default heap memory using the <code>-Xmx</code> option. For really large files, and if you have the memory, you could use <code>-Xmx 6G</code>, for example.</p></details> <p>To delete documents from an index:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">java</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -cp</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;blacklab.jar:lib&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> nl.inl.blacklab.tools.IndexTool</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> delete</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> INDEX_DIR</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> FILTER_QUERY</span></span></code></pre></div><p>Here, <code>FILTER_QUERY</code> is a metadata filter query in <a href="https://lucene.apache.org/core/8_8_1/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package.description" target="_blank" rel="noreferrer">Lucene query language</a> that matches the documents to delete. Deleting documents and re-adding them can be used to update documents.</p> <h2 id="supported-formats" tabindex="-1">Supported formats <a class="header-anchor" href="#supported-formats" aria-label="Permalink to &quot;Supported formats&quot;">​</a></h2> <p>BlackLab supports a number of input formats that are common in corpus linguistics:</p> <ul><li><code>tei</code> (<a href="http://www.tei-c.org/" target="_blank" rel="noreferrer">Text Encoding Initiative</a>, a popular XML format for linguistic resources, including corpora. indexes content inside the &#39;body&#39; element; assumes part of speech is found in an attribute called &#39;type&#39;)</li> <li><code>sketch-wpl</code> (the TSV/XML hybrid &quot;word per line&quot; input format <a href="https://www.sketchengine.co.uk/documentation/preparing-corpus-text/" target="_blank" rel="noreferrer">the Sketch Engine/CWB use</a>)</li> <li><code>chat</code> (<a href="https://en.wikipedia.org/wiki/CHILDES#Database_Format" target="_blank" rel="noreferrer">Codes for the Human Analysis of Transcripts</a>, the format used by the CHILDES project)</li> <li><code>folia</code> (a <a href="https://proycon.github.io/folia/" target="_blank" rel="noreferrer">corpus XML format</a> popular in the Netherlands)</li> <li><code>tsv-frog</code> (tab-separated file as produced by the <a href="https://languagemachines.github.io/frog/" target="_blank" rel="noreferrer">Frog annotation tool</a>)</li></ul> <p>BlackLab also supports these generic file formats:</p> <ul><li><code>csv</code> (Comma-Separated Values file that should have column names &quot;word&quot;, &quot;lemma&quot; and &quot;pos&quot;)</li> <li><code>tsv</code> (Tab-Separated Values file that should have column names &quot;word&quot;, &quot;lemma&quot; and &quot;pos&quot;)</li> <li><code>txt</code> (A plain text file; will tokenize on whitespace and index word forms)</li></ul> <p>To add support for your own format, you just have to <a href="./simple-example.html">write a configuration file</a>.</p> <p>If you choose the first option, specify the format name (which must match the name of the .blf.yaml or .blf.json file) as the <code>FORMAT</code> parameter. IndexTool will search a number of directories, including the current directory and the (parent of the) input directory for format files.</p> <p>If you choose the second option, specify the fully-qualified class name of your DocIndexer class as the <code>FORMAT</code> parameter.</p> <h2 id="add-your-own-format" tabindex="-1">Add your own format <a class="header-anchor" href="#add-your-own-format" aria-label="Permalink to &quot;Add your own format&quot;">​</a></h2> <p>The preferred way to add support for your input format one is to write an input format configuration file in either YAML or JSON format. See the <a href="./simple-example.html">next section</a>.</p> <details class="details custom-block"><summary>Expert: implementing a custom indexer</summary> <p>It is possible to <a href="/development/customization/docindexer.html">implement your own DocIndexer class</a>, which offers complete control over the indexing process, but we don&#39;t recommend this unless really necessary.</p> <p>If you encounter limitations with the configuration file approach, please <a href="/guide/about.html#contact-us">contact us</a>.</p></details> <h2 id="faster-indexing" tabindex="-1">Faster indexing <a class="header-anchor" href="#faster-indexing" aria-label="Permalink to &quot;Faster indexing&quot;">​</a></h2> <p>IndexTool will try to index two documents at the same time by default. If you have enough CPU cores and memory, you can increase this number by setting the <code>--threads n</code> option, where n is the number of threads to use (i.e. documents to index at the same time).</p> <p>If you find that IndexTool is running out of memory, or becoming very slow, try a lower number of threads instead.</p> <div class="warning custom-block"><p class="custom-block-title">WARNING</p> <ul><li>multi-threaded indexing currently works per-file, so if all your documents are in a single large file, only 1 thread will be used.</li> <li>large files appear to gradually degrade indexing performance as we get further into the file.</li></ul> <p>For these reasons, it is currently better to spread your documents over multiple files, although it is not necessary to limit yourself to 1 document per file. Just make sure your files aren&#39;t larger than a few MB.</p></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("guide/030_index-your-data/005_create-an-index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _005_createAnIndex = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _005_createAnIndex as default
};
