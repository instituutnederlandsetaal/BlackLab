import { ssrRenderAttrs, ssrRenderStyle, ssrRenderAttr } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const _imports_0 = "/assets/blacklab-frontend.vrKpaZRa.png";
const __pageData = JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started.md","filePath":"guide/010_getting-started.md","lastUpdated":1749639304000}');
const _sfc_main = { name: "guide/getting-started.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1> <p>There&#39;s <a href="/guide/#try-it-online">several examples online</a> of what you can do with BlackLab.</p> <p>But at some point, you&#39;re going to want to run it yourself so you can experiment with your own data.</p> <p>Before you can search your data using BlackLab, you&#39;ll need to:</p> <ul><li>Install BlackLab</li> <li>Prepare your data</li> <li>Index your data</li></ul> <p>Let&#39;s go over these one by one.</p> <h2 id="install-blacklab" tabindex="-1">Install BlackLab <a class="header-anchor" href="#install-blacklab" aria-label="Permalink to &quot;Install BlackLab&quot;">​</a></h2> <p>The web service, BlackLab Server, can be used from any programming language and offers a simple REST API (web service).</p> <p>You will need a JVM version of 17 or higher to use the latest BlackLab versions. Also install Apache Tomcat 9. For example, on Ubuntu:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sudo</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> apt</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> install</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> openjdk-17-jdk</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> tomcat9</span></span></code></pre></div><p>Create an empty directory where you want to store your indexed corpora. Make sure it has the permissions you require. For example:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Create directory</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sudo</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> mkdir</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -p</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /data/blacklab-corpora</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Make sure you own it, so you can create corpora there</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sudo</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> chown</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -R</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> $USER</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">:</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">$GROUP </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">/data/blacklab-corpora</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Make sure it&#39;s world-readable so Tomcat can read it</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">chmod</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -R</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> a+rx</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /data/blacklab-corpora</span></span></code></pre></div><p>Now create a directory <code>/etc/blacklab</code> with a file named <code>blacklab-server.yaml</code>:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Create directory</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sudo</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> mkdir</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /etc/blacklab</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Create empty config file and take ownership of it</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sudo</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> touch</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /etc/blacklab/blacklab-server.yaml</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sudo</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> chown</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> $USER</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">:</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">$GROUP </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">/etc/blacklab/blacklab-server.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Make sure Tomcat can access the directory and file</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sudo</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> chmod</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -R</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> a+rX</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /etc/blacklab</span></span></code></pre></div><p>(NOTE: if you cannot create a directory under <code>/etc/</code>, see the TIP under <a href="./../server/#configuration-file">configuration file</a> for alternatives)</p> <p>Now, edit the file <code>/etc/blacklab/blacklab-server.yaml</code> using a text editor:</p> <div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">---</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">configVersion</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">2</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Where indexes can be found</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># (list directories whose subdirectories are indexes, or directories containing a single corpus)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">indexLocations</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">- </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">/data/blacklab-corpora</span></span></code></pre></div><p>On the <a href="https://github.com/instituutnederlandsetaal/BlackLab/releases/" target="_blank" rel="noreferrer">GitHub releases page</a>, find the latest stable version (usually at the top) and download the attached file named <code>blacklab-server-VERSION.war</code>. Place this file in Tomcat&#39;s <code>webapps</code> directory. Tomcat should automatically recognize the file and initialize the application (usually, it will extract it to a subdirectory).</p> <p>Now go to <a href="https://localhost:8080/blacklab-server/" target="_blank" rel="noreferrer">https://localhost:8080/blacklab-server/</a> (or substitute the hostname of the server you&#39;ve installed it on if not running locally) and you should see an XML response from BlackLab.</p> <p><em>(<a href="./../server/">learn more about BlackLab Server</a>)</em></p> <h2 id="prepare-your-data" tabindex="-1">Prepare your data <a class="header-anchor" href="#prepare-your-data" aria-label="Permalink to &quot;Prepare your data&quot;">​</a></h2> <p>In order to search your data using BlackLab, it needs to be in a supported format, and it needs to be indexed by BlackLab.</p> <h3 id="supported-formats" tabindex="-1">Supported formats <a class="header-anchor" href="#supported-formats" aria-label="Permalink to &quot;Supported formats&quot;">​</a></h3> <p>BlackLab supports a number of input formats, but the most well-known are <a href="https://www.tei-c.org/" target="_blank" rel="noreferrer">TEI</a> (Text Encoding Initiative) and <a href="https://proycon.github.io/folia/" target="_blank" rel="noreferrer">FoLiA</a> (Format for Linguistic Annotation). These are both XML formats. If your data is not already in one of the supported formats, you can either <a href="./index-your-data/simple-example.html">add support via a configuration file</a> or convert your data to a supported format. (see the next section if you want to use a test dataset instead of your own)</p> <div class="warning custom-block"><p class="custom-block-title">PLEASE NOTE</p> <p>BlackLab needs <em>tokenized</em> data files as input. That means the word boundaries have already been determined and BlackLab can just index each word as it parses the input file.</p> <p>It is possible to configure BlackLab to perform the necessary tokenizing and tagging; see <a href="/development/customization/plugins.html">Convert/Tag plugins</a>.</p></div> <h3 id="testing-with-the-brown-corpus" tabindex="-1">Testing with the Brown corpus <a class="header-anchor" href="#testing-with-the-brown-corpus" aria-label="Permalink to &quot;Testing with the Brown corpus&quot;">​</a></h3> <p>If you can&#39;t use your own data yet, we&#39;ve provided a <a href="https://github.com/instituutnederlandsetaal/BlackLab/wiki/brownCorpus.lemmatized.xml.zip" target="_blank" rel="noreferrer">tokenized, annotated TEI version of the Brown corpus</a> for you to test with.</p> <p><strong>NOTE:</strong> to index this version of the Brown corpus, use the <code>tei-p5-legacy</code> input format.</p> <details class="details custom-block"><summary>The Brown Corpus</summary> <p>The <a href="http://en.wikipedia.org/wiki/Brown_Corpus" title="http://en.wikipedia.org/wiki/Brown_Corpus" target="_blank" rel="noreferrer">Brown Corpus</a> is a corpus compiled in the 1960s by <a href="http://archive.org/details/BrownCorpus" target="_blank" rel="noreferrer">Nelson Francis and Henry Kucera</a> at Brown University. It is small by today&#39;s standard (500 documents, 1M words). It was converted to TEI format by <a href="http://users.ox.ac.uk/~lou/" target="_blank" rel="noreferrer">Lou Burnard</a>. It is available from archive.org under the <a href="http://creativecommons.org/licenses/by-nc/3.0/" target="_blank" rel="noreferrer">CC-BY-NC 3.0</a> license, but we&#39;ve created our own version which includes lemmata.<br>(Please note that we didn&#39;t check the lemmatization, and it probably contains errors - useful for testing purposes only!)</p></details> <h3 id="index-the-data" tabindex="-1">Index the data <a class="header-anchor" href="#index-the-data" aria-label="Permalink to &quot;Index the data&quot;">​</a></h3> <p>There&#39;s a commandline tool to create a corpus called <code>IndexTool</code>. To use it, also download the blacklab-core-VERSION.jar from the <a href="https://github.com/instituutnederlandsetaal/BlackLab/releases/" target="_blank" rel="noreferrer">GitHub releases page</a> and extract it somewhere convenient.</p> <p>From this directory, run the IndexTool without parameters for help information:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">java</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -cp</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;blacklab-VERSION.jar:lib&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> nl.inl.blacklab.tools.IndexTool</span></span></code></pre></div><p>(NOTE: replace VERSION with the correct version. <code>blacklab-VERSION.jar</code> and the <code>lib</code> subdirectory containing required libraries should be located in the current directory; if not, prefix it with the correct directory)</p> <p>(if you&#39;re on Windows, replace the classpath separator colon <code>:</code> with a semicolon <code>;</code>)</p> <p>We want to create a new corpus, so we need to supply a corpus (index) directory, input file(s) and an input format:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">java</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -cp</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;blacklab-VERSION.jar:lib&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> nl.inl.blacklab.tools.IndexTool</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> create</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> INDEX_DIR</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> INPUT_FILES</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> FORMAT</span></span></code></pre></div><p>If you specify a directory as the <code>INPUT_FILES</code>, it will be scanned recursively. You can also specify a file glob (such as *.xml) or a single file. If you specify a .zip or .tar.gz file, BlackLab will automatically index its contents.</p> <p>For example, if you have TEI-P5 data in <code>/tmp/my-tei/</code> and want to create a corpus in <code>/data/blacklab-corpora/my-corpus</code>, run the following command:</p> <div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">java</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -cp</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;blacklab-VERSION.jar&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> nl.inl.blacklab.tools.IndexTool</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> create</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /data/blacklab-corpora/my-corpus</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /tmp/my-tei/</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> tei-p5</span></span></code></pre></div><p>(<strong>NOTE:</strong> for the included Brown corpus data, use the <code>tei-p5-legacy</code> input format)</p> <p>Your data is indexed and placed in a new BlackLab corpus in the <code>/data/blacklab-corpora/my-corpus</code> directory.</p> <details class="details custom-block"><summary><b>TIP:</b> TEI variants</summary> <p>BlackLab now includes three TEI variants: <code>tei-p5</code> (TEI-P5 using the <code>pos</code> attribute), <code>tei-p5-legacy</code> (same but using the nonstandard <code>type</code> attribute for part of speech) and <code>tei-p4-legacy</code> (TEI-P4 using the <code>type</code> attribute). Make sure you pick the right variant for you, or copy one of the <code>tei-*.blf.yaml</code> files (see <a href="https://github.com/instituutnederlandsetaal/blacklab/blob/dev/engine/src/main/resources/formats" target="_blank" rel="noreferrer">here</a>) and customize it to your needs.</p></details> <p>See also:</p> <ul><li><a href="/guide/index-your-data/simple-example.html">Adding a new input format</a> (if your format isn&#39;t supported yet and you don&#39;t want to convert)</li> <li><a href="/guide/index-your-data/create-an-index.html">Indexing with BlackLab</a></li></ul> <h3 id="testing-your-corpus" tabindex="-1">Testing your corpus <a class="header-anchor" href="#testing-your-corpus" aria-label="Permalink to &quot;Testing your corpus&quot;">​</a></h3> <h4 id="blacklab-server" tabindex="-1">BlackLab Server <a class="header-anchor" href="#blacklab-server" aria-label="Permalink to &quot;BlackLab Server&quot;">​</a></h4> <p>If your corpus was created as a subdirectory of the <code>indexLocation</code> you configured above (<code>/data/blacklab-corpora</code> in the above example), BlackLab Server should pick it up automatically. You can test this by going to <a href="http://localhost:8080/blacklab-server/my-corpus" target="_blank" rel="noreferrer">http://localhost:8080/blacklab-server/my-corpus</a>. If it worked, you should see metadata about your corpus.</p> <p>If you encounter problems, or you just prefer to test your corpus using a simple command line tool, you can try the <a href="/development/query-tool.html">QueryTool</a>.</p> <h2 id="corpus-search-application" tabindex="-1">Corpus search application <a class="header-anchor" href="#corpus-search-application" aria-label="Permalink to &quot;Corpus search application&quot;">​</a></h2> <p>BlackLab Frontend is our corpus search application. It has its own <a href="https://blacklab-frontend.ivdnt.org/" target="_blank" rel="noreferrer">documentation site</a> with instructions for installation and customization.</p> <p><img${ssrRenderAttr("src", _imports_0)} alt="Screenshot of BlackLab Frontend"></p> <h2 id="a-simple-script" tabindex="-1">A simple script <a class="header-anchor" href="#a-simple-script" aria-label="Permalink to &quot;A simple script&quot;">​</a></h2> <p>If you want to access your corpus using a script, that is easy as well.</p> <p>Below is an example in Python. It performs a CQL query and shows matches in KWIC (keyword in context) format:</p> <div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">import</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> urllib.parse</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">import</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> urllib.request</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">import</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> json</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">def</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> words</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(context):</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">	&quot;&quot;&quot; Convert word array to string. &quot;&quot;&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">	return</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot; &quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">.join(context[</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;word&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">])</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">def</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> search</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(cqlQuery):</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">	&quot;&quot;&quot; Search and show hits. &quot;&quot;&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">	url </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;http://localhost:8080/blacklab-server/my-corpus/hits?patt=&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> +</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> \\</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">		urllib.parse.quote_plus(cqlQuery) </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">+</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;&amp;outputformat=json&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">	f </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> urllib.request.urlopen(url)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">	response </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> json.loads(f.read().decode(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;utf-8&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">))</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">	hits </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> response[</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;hits&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">	docs </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> response[</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;docInfos&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">	for</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> hit </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">in</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> hits:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">		# Show the document title and hit information</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">		doc </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> docs[hit[</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;docPid&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">]]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">		print</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(words(hit[</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;left&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">]) </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">+</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot; [&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> +</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> words(hit[</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;match&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">]) </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">+</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;] &quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> +</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> \\</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">			words(hit[</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;right&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">]) </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">+</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot; (&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> +</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> doc[</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;title&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">][</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">] </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">+</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;)&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># &quot;Main program&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">search(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;[pos=&quot;a.*&quot;] &quot;fox&quot;&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)</span></span></code></pre></div><p>More examples can be found <a href="./../server/from-different-languages.html">here</a>.</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("guide/010_getting-started.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _010_gettingStarted = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _010_gettingStarted as default
};
