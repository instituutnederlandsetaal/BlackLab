import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Migration guide","description":"","frontmatter":{},"headers":[],"relativePath":"development/migration-guide.md","filePath":"development/060_migration-guide.md","lastUpdated":1749114403000}');
const _sfc_main = { name: "development/migration-guide.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="migration-guide" tabindex="-1">Migration guide <a class="header-anchor" href="#migration-guide" aria-label="Permalink to &quot;Migration guide&quot;">​</a></h1> <h2 id="migrating-from-blacklab-1-7-to-2-0" tabindex="-1">Migrating from BlackLab 1.7 to 2.0 <a class="header-anchor" href="#migrating-from-blacklab-1-7-to-2-0" aria-label="Permalink to &quot;Migrating from BlackLab 1.7 to 2.0&quot;">​</a></h2> <p>BlackLab Server 2.0 contains one significant change to the API: metadata values are now always reported as lists, even if there is only one value. Because it is now possible to index multiple values for a single metadata field (for example, to associate two authors or two images with one document), this change was required.</p> <p>Where BlackLab 2.0 does differ significantly is in its Java API and configuration files. If you use the Java API, for example because you&#39;ve written your own DocIndexer class, this page helps you migrate it to 2.0.</p> <h3 id="terminology" tabindex="-1">Terminology <a class="header-anchor" href="#terminology" aria-label="Permalink to &quot;Terminology&quot;">​</a></h3> <ul><li>&quot;Searcher&quot; -&gt; &quot;BlackLab index&quot;</li> <li>&quot;complex field&quot; -&gt; &quot;annotated field&quot;</li> <li>&quot;property on a complex field&quot; -&gt; &quot;annotation on an annotated field&quot;</li> <li>&quot;an indexed alternative for a property&quot; (e.g. case- and diacritics-insensitive) -&gt; &quot;an indexed sensitivity for an annotation&quot;</li></ul> <p>So, for example, an annotated field &quot;contents&quot; might have annotations &quot;word&quot;, &quot;lemma&quot; and &quot;pos&quot; (part of speech), and the &quot;word&quot; annotation might have two sensitivities indexed: (case- and diacritics-) sensitive, and (case- and diacritics-) insensitive.</p> <h3 id="migrating-the-configuration-file-s" tabindex="-1">Migrating the configuration file(s) <a class="header-anchor" href="#migrating-the-configuration-file-s" aria-label="Permalink to &quot;Migrating the configuration file(s)&quot;">​</a></h3> <p>Usually you will use either a file <code>blacklab-server.yaml</code> (for BlackLab Serer), or <code>blacklab.yaml</code> (for e.g. IndexTool, QueryTool or other BlackLab applications). (JSON works too if you prefer)</p> <p>A new, cleaner format was added in BlackLab 2.0. The old format still works, but it is a good idea to convert to the new format as the old format will eventually be removed.</p> <p>For more information about the config file format, see <a href="/server/configuration.html">Configuration files</a>.</p> <h3 id="migrating-docindexers" tabindex="-1">Migrating DocIndexers <a class="header-anchor" href="#migrating-docindexers" aria-label="Permalink to &quot;Migrating DocIndexers&quot;">​</a></h3> <p>If you have a custom implementation of DocIndexer for your own input format, please ensure that it has a default constructor. If instead if has a constructor that takes an <code>Indexer</code>, change <code>Indexer</code> to <code>DocWriter</code>.</p> <h3 id="method-naming" tabindex="-1">Method naming <a class="header-anchor" href="#method-naming" aria-label="Permalink to &quot;Method naming&quot;">​</a></h3> <p>For many classes, methods were renamed from getSomeThing() to simply someThing(). While this may not be the convention in Java, it makes for less noisy, more natural-sounding code, especially when chaining methods. It also saves on typing. For example, compare these two examples:</p> <div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">String luceneField </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> index</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    .</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">getAnnotatedField</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&quot;contents&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    .</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">getAnnotation</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&quot;word&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    .</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">getSensitivity</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(MatchSensitivity.SENSITIVE)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    .</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">getLuceneField</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">();</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">String luceneField </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> index</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    .</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">annotatedField</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&quot;contents&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    .</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">annotation</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&quot;word&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    .</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sensitivity</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(MatchSensitivity.SENSITIVE)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    .</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">luceneField</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">();</span></span></code></pre></div><h3 id="important-renamed-packages-and-classes" tabindex="-1">Important renamed packages and classes <a class="header-anchor" href="#important-renamed-packages-and-classes" aria-label="Permalink to &quot;Important renamed packages and classes&quot;">​</a></h3> <p>General:</p> <ul><li>Searcher -&gt; BlackLabIndex</li></ul> <p>Classes used while indexing:</p> <ul><li>ComplexField -&gt; AnnotatedFieldWriter</li> <li>ComplexFieldProperty -&gt; AnnotationWriter</li> <li>ComplexFieldUtil -&gt; AnnotatedFieldNameUtil</li></ul> <p>Index structure:</p> <ul><li>IndexStructure -&gt; IndexMetadata</li> <li>ComplexFieldDesc -&gt; AnnotatedField</li> <li>PropertyDesc -&gt; Annotation</li></ul> <p>Packages:</p> <ul><li>nl.inl.blacklab.search.indexstructure -&gt; .search.indexmetadata</li> <li>nl.inl.blacklab.externalstorage -&gt; .contentstore</li></ul> <h3 id="migrating-blacklab-programs" tabindex="-1">Migrating BlackLab programs <a class="header-anchor" href="#migrating-blacklab-programs" aria-label="Permalink to &quot;Migrating BlackLab programs&quot;">​</a></h3> <p>Methods:</p> <ul><li>instead of BlackLabIndex.open(), use BlackLab.open()</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("development/060_migration-guide.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _060_migrationGuide = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _060_migrationGuide as default
};
