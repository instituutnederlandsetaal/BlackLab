import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"API reference","description":"","frontmatter":{"title":"API reference"},"headers":[],"relativePath":"server/rest-api/index.md","filePath":"server/030_rest-api/index.md","lastUpdated":1749114403000}');
const _sfc_main = { name: "server/rest-api/index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="blacklab-server-rest-api-reference" tabindex="-1">BlackLab Server REST API reference <a class="header-anchor" href="#blacklab-server-rest-api-reference" aria-label="Permalink to &quot;BlackLab Server REST API reference&quot;">​</a></h1> <p>This documents all of BlackLab Server&#39;s endpoints. For a more guided introducion, see the <a href="./../overview.html">overview</a>.</p> <h2 id="general-notes" tabindex="-1">General notes <a class="header-anchor" href="#general-notes" aria-label="Permalink to &quot;General notes&quot;">​</a></h2> <h3 id="api-compatibility" tabindex="-1">API compatibility <a class="header-anchor" href="#api-compatibility" aria-label="Permalink to &quot;API compatibility&quot;">​</a></h3> <p>Use <code>api=3</code> or <code>api=4</code> to specify the API version to use. Differences from 3 to 4 are minor; some inconsistencies are fixed and some redundant information was removed from responses. Configure <code>parameters.api</code> in your <code>blacklab-server.yaml</code> to set the default version to use. Support for older version(s) is a transitionary measure and will eventually be dropped.</p> <p>Full details can be found in <a href="./api-versions.html">API versions</a>.</p> <h3 id="output-format" tabindex="-1">Output format <a class="header-anchor" href="#output-format" aria-label="Permalink to &quot;Output format&quot;">​</a></h3> <p>To request a specific output format, either:</p> <ul><li>pass the HTTP header <code>Accept</code> with the value <code>application/json</code>, <code>application/xml</code> or <code>text/csv</code>, or</li> <li>pass the query parameter <code>outputformat</code> with the value <code>json</code>, <code>xml</code> or <code>csv</code>.</li></ul> <p>If both are specified, the parameter has precedence.</p> <details class="details custom-block"><summary>Notes about CSV</summary> <p>For CSV hits/docs results, the parameters <code>csvsummary</code> determines whether to include a summary of the search parameters in the output <code>[no]</code> and <code>csvsepline</code> determines whether to include a separator declaration that will help Microsoft Excel read the file <code>[no]</code>.</p> <p><code>listvalues</code> can be a comman-separated list of annotations to include in the results. <code>listmetadatavalues</code> is the same for metadata fields.</p> <p>If a metadata field has multiple values (e.g. if a document has multiple authors), they will be concatenated with <code>|</code> as the separator. <code>|</code>, <code>\\n</code>, <code>\\r</code> and <code>\\\\</code> will be backslash-escaped.</p> <p>As is common in CSV, values may be double-quoted if necessary (e.g. if a value contains a comma). Any double quotes already in the values will be doubled, so <code>say &quot;yes&quot;, or &quot;no&quot;?</code> will become <code>&quot;say &quot;&quot;yes&quot;&quot;, or &quot;&quot;no&quot;&quot;?&quot;</code></p></details> <h2 id="root-endpoint" tabindex="-1">Root endpoint <a class="header-anchor" href="#root-endpoint" aria-label="Permalink to &quot;Root endpoint&quot;">​</a></h2> <p>This endpoint returns available corpora and server information.</p> <ul><li><a href="./get.html">Corpora and server information</a> : <code>GET /blacklab-server</code></li></ul> <h2 id="corpus-related-endpoints" tabindex="-1">Corpus-related endpoints <a class="header-anchor" href="#corpus-related-endpoints" aria-label="Permalink to &quot;Corpus-related endpoints&quot;">​</a></h2> <p>These endpoints deal with a specific corpus.</p> <p>All URLs should start with <code>/blacklab-server/&lt;corpus-name&gt;</code>.</p> <h3 id="information-about-the-corpus" tabindex="-1">Information about the corpus <a class="header-anchor" href="#information-about-the-corpus" aria-label="Permalink to &quot;Information about the corpus&quot;">​</a></h3> <p>Information about the corpus such as size, documentFormat, fields, and status.</p> <ul><li><a href="./corpus/get.html">Corpus information</a> : <code>GET /</code></li> <li><a href="./corpus/status/get.html">Corpus status</a> : <code>GET /status</code></li> <li><a href="./corpus/fields/fieldname/get.html">Field information</a> : <code>GET /fields/&lt;fieldname&gt;</code></li> <li><a href="./corpus/relations/get.html">Span and relation types</a> : <code>GET /relations</code></li></ul> <h3 id="find-hits-or-documents" tabindex="-1">Find hits or documents <a class="header-anchor" href="#find-hits-or-documents" aria-label="Permalink to &quot;Find hits or documents&quot;">​</a></h3> <p>Search for individual matches of a text pattern, or for documents matching criteria.</p> <ul><li><a href="./corpus/hits/get.html">Find hits / group hits</a> : <code>GET /hits</code></li> <li><a href="./corpus/parse-pattern/get.html">Parse a pattern without searching</a> : <code>GET /parse-pattern</code></li> <li><a href="./corpus/docs/get.html">Find documents / group documents</a> : <code>GET /docs</code></li></ul> <h3 id="information-about-a-document" tabindex="-1">Information about a document <a class="header-anchor" href="#information-about-a-document" aria-label="Permalink to &quot;Information about a document&quot;">​</a></h3> <p>Retrieve metadata and (parts of) the content of a document.</p> <ul><li><a href="./corpus/docs/pid/get.html">Document metadata</a> : <code>GET /docs/&lt;pid&gt;</code></li> <li><a href="./corpus/docs/pid/contents/get.html">Document contents</a> : <code>GET /docs/&lt;pid&gt;/contents</code></li> <li><a href="./corpus/docs/pid/snippet/get.html">Document snippet</a> : <code>GET /docs/&lt;pid&gt;/snippet</code></li></ul> <h3 id="other-search" tabindex="-1">Other search <a class="header-anchor" href="#other-search" aria-label="Permalink to &quot;Other search&quot;">​</a></h3> <ul><li><a href="./corpus/termfreq/get.html">Term frequencies</a> : <code>GET /termfreq</code></li> <li><a href="./corpus/autocomplete/field/get.html">Autocomplete</a> : <code>GET /autocomplete</code></li></ul> <h2 id="manage-user-corpora" tabindex="-1">Manage user corpora <a class="header-anchor" href="#manage-user-corpora" aria-label="Permalink to &quot;Manage user corpora&quot;">​</a></h2> <p>If user authentication and private user corpora are enabled, these can be used to manage the user&#39;s own corpora: creating/deleting, adding data and sharing.</p> <p>All URLs should start with <code>/blacklab-server</code>.</p> <ul><li><a href="./post.html">Create user corpus</a> : <code>POST /</code></li> <li><a href="./corpus/delete.html">Delete user corpus</a> : <code>DELETE /&lt;corpus-name&gt;</code></li> <li><a href="./corpus/docs/post.html">Add data to user corpus</a> : <code>POST /&lt;corpus-name&gt;/docs</code></li> <li><a href="./corpus/sharing/get.html">Get user corpus sharing settings</a> : <code>GET /&lt;corpus-name&gt;/sharing</code></li> <li><a href="./corpus/sharing/post.html">Update user corpus sharing settings</a> : <code>POST /&lt;corpus-name&gt;/sharing</code></li> <li><a href="./corpus/sharing/post.html">List corpora shared with me</a> : <code>GET /shared-with-me</code></li></ul> <h2 id="other-global-endpoints" tabindex="-1">Other global endpoints <a class="header-anchor" href="#other-global-endpoints" aria-label="Permalink to &quot;Other global endpoints&quot;">​</a></h2> <p>These endpoints are not tied to a specific corpus. All URLs should start with <code>/blacklab-server</code>.</p> <h3 id="input-format-endpoints" tabindex="-1">Input format endpoints <a class="header-anchor" href="#input-format-endpoints" aria-label="Permalink to &quot;Input format endpoints&quot;">​</a></h3> <p>These give you information about input format configurations that BlackLab has access to: built-in formats, external format configuration files it found, and user formats if available.</p> <p>There&#39;s also operations to add, update and delete private user formats; those are only available if user authentication and private user corpora are enabled.</p> <ul><li><a href="./input-formats/get.html">List input formats</a> : <code>GET /input-formats</code></li> <li><a href="./input-formats/post.html">Add or update input format</a> : <code>POST /input-formats</code></li> <li><a href="./input-formats/name/get.html">Input format configuration</a>: <code>GET /input-formats/&lt;name&gt;</code></li> <li><a href="./input-formats/name/xslt/get.html">Input format XSLT</a>: <code>GET /input-formats/&lt;name&gt;/xslt</code></li> <li><a href="./input-formats/name/delete.html">Delete input format</a> : <code>DELETE /input-formats/&lt;name&gt;</code></li></ul> <h3 id="debug-endpoints" tabindex="-1">Debug endpoints <a class="header-anchor" href="#debug-endpoints" aria-label="Permalink to &quot;Debug endpoints&quot;">​</a></h3> <p>Can only be used in debug mode.</p> <ul><li><a href="./cache-info/get.html">Show results cache</a>: <code>GET /cache-info</code></li> <li><a href="./cache-clear/post.html">Clear results cache</a>: <code>POST /cache-clear</code></li></ul> <h2 id="miscellaneous" tabindex="-1">Miscellaneous <a class="header-anchor" href="#miscellaneous" aria-label="Permalink to &quot;Miscellaneous&quot;">​</a></h2> <ul><li>An incomplete list of <a href="./errors.html">response codes</a> Blacklab Server will return.</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("server/030_rest-api/index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const index = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  index as default
};
